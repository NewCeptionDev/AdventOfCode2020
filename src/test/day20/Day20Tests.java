package test.day20;

import me.newceptiondev.day20.Day20;
import me.newceptiondev.day20.Tile;
import org.junit.jupiter.api.Test;

import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

public class Day20Tests {

    @Test
    public void getSidesTest() {

        Day20 day20 = new Day20();

        List<String> input = List.of("Tile 2311:" , "..##.#..#." , "##..#....." , "#...##..#." ,
                                     "####.#...#" , "##.##.###." , "##...#.###" , ".#.#.#..##" ,
                                     "..#....#.." , "###...#.#." , "..###..###");

        List<String> expectedSides = List.of("..##.#..#.", ".#####..#.", "..###..###", "...#.##..#", ".#..#.##..", ".#..#####.", "###..###..", "#..##.#...");

        List<Tile> tiles = day20.parseTiles(input);

        assertLinesMatch(expectedSides, tiles.get(0).getEdges());
    }
    
    @Test
    public void task1Test() {

        Day20 day20 = new Day20();

        List<String> input = List.of("Tile 2311:" , "..##.#..#." , "##..#....." , "#...##..#." ,
                                     "####.#...#" , "##.##.###." , "##...#.###" , ".#.#.#..##" ,
                                     "..#....#.." , "###...#.#." , "..###..###" , "" , "Tile 1951:" ,
                                     "#.##...##." , "#.####...#" , ".....#..##" , "#...######" ,
                                     ".##.#....#" , ".###.#####" , "###.##.##." , ".###....#." ,
                                     "..#.#..#.#" , "#...##.#.." , "" , "Tile 1171:" , "####...##." ,
                                     "#..##.#..#" , "##.#..#.#." , ".###.####." , "..###.####" ,
                                     ".##....##." , ".#...####." , "#.##.####." , "####..#..." ,
                                     ".....##..." , "" , "Tile 1427:" , "###.##.#.." , ".#..#.##.." ,
                                     ".#.##.#..#" , "#.#.#.##.#" , "....#...##" , "...##..##." ,
                                     "...#.#####" , ".#.####.#." , "..#..###.#" , "..##.#..#." , "" ,
                                     "Tile 1489:" , "##.#.#...." , "..##...#.." , ".##..##..." ,
                                     "..#...#..." , "#####...#." , "#..#.#.#.#" , "...#.#.#.." ,
                                     "##.#...##." , "..##.##.##" , "###.##.#.." , "" , "Tile 2473:" ,
                                     "#....####." , "#..#.##..." , "#.##..#..." , "######.#.#" ,
                                     ".#...#.#.#" , ".#########" , ".###.#..#." , "########.#" ,
                                     "##...##.#." , "..###.#.#." , "" , "Tile 2971:" , "..#.#....#" ,
                                     "#...###..." , "#.#.###..." , "##.##..#.." , ".#####..##" ,
                                     ".#..####.#" , "#..#.#..#." , "..####.###" , "..#.#.###." ,
                                     "...#.#.#.#" , "" , "Tile 2729:" , "...#.#.#.#" , "####.#...." ,
                                     "..#.#....." , "....#..#.#" , ".##..##.#." , ".#.####..." ,
                                     "####.#.#.." , "##.####..." , "##..#.##.." , "#.##...##." , "" ,
                                     "Tile 3079:" , "#.#.#####." , ".#..######" , "..#......." ,
                                     "######...." , "####.#..#." , ".#...#.##." , "#.#####.##" ,
                                     "..#.###..." , "..#......." , "..#.###...");


        assertEquals(20899048083289L, day20.task1(input));
    }

    @Test
    public void task2Test() {

        Day20 day20 = new Day20();

        List<String> input = List.of("Tile 2311:" , "..##.#..#." , "##..#....." , "#...##..#." ,
                                     "####.#...#" , "##.##.###." , "##...#.###" , ".#.#.#..##" ,
                                     "..#....#.." , "###...#.#." , "..###..###" , "" , "Tile 1951:" ,
                                     "#.##...##." , "#.####...#" , ".....#..##" , "#...######" ,
                                     ".##.#....#" , ".###.#####" , "###.##.##." , ".###....#." ,
                                     "..#.#..#.#" , "#...##.#.." , "" , "Tile 1171:" , "####...##." ,
                                     "#..##.#..#" , "##.#..#.#." , ".###.####." , "..###.####" ,
                                     ".##....##." , ".#...####." , "#.##.####." , "####..#..." ,
                                     ".....##..." , "" , "Tile 1427:" , "###.##.#.." , ".#..#.##.." ,
                                     ".#.##.#..#" , "#.#.#.##.#" , "....#...##" , "...##..##." ,
                                     "...#.#####" , ".#.####.#." , "..#..###.#" , "..##.#..#." , "" ,
                                     "Tile 1489:" , "##.#.#...." , "..##...#.." , ".##..##..." ,
                                     "..#...#..." , "#####...#." , "#..#.#.#.#" , "...#.#.#.." ,
                                     "##.#...##." , "..##.##.##" , "###.##.#.." , "" , "Tile 2473:" ,
                                     "#....####." , "#..#.##..." , "#.##..#..." , "######.#.#" ,
                                     ".#...#.#.#" , ".#########" , ".###.#..#." , "########.#" ,
                                     "##...##.#." , "..###.#.#." , "" , "Tile 2971:" , "..#.#....#" ,
                                     "#...###..." , "#.#.###..." , "##.##..#.." , ".#####..##" ,
                                     ".#..####.#" , "#..#.#..#." , "..####.###" , "..#.#.###." ,
                                     "...#.#.#.#" , "" , "Tile 2729:" , "...#.#.#.#" , "####.#...." ,
                                     "..#.#....." , "....#..#.#" , ".##..##.#." , ".#.####..." ,
                                     "####.#.#.." , "##.####..." , "##..#.##.." , "#.##...##." , "" ,
                                     "Tile 3079:" , "#.#.#####." , ".#..######" , "..#......." ,
                                     "######...." , "####.#..#." , ".#...#.##." , "#.#####.##" ,
                                     "..#.###..." , "..#......." , "..#.###...");


        assertEquals(273, day20.task2(input));
    }

    @Test
    public void rotateTest() {
        Tile t = new Tile(List.of("Tile 2311:" , "..##.#..#." , "##..#....." , "#...##..#.",
                                  "####.#...#" , "##.##.###." , "##...#.###" , ".#.#.#..##" ,
                                  "..#....#.." , "###...#.#." , "..###..###"));

        List<String> rotate90Expected = List.of(".#..#####.", ".#.####.#.", "###...#..#", "#..#.##..#", "#....#.##.", "...##.##.#", ".#...#....", "#.#.##....", "##.###.#.#", "#..##.#...");

        assertLinesMatch(rotate90Expected, t.rotate90());
    }

}
